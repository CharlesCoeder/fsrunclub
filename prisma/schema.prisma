generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  email         String          @unique
  password      String
  name          String
  role          Role            @default(USER)
  runParticipations UserRun[]
  ledRuns       InstructorRun[]
  userRewards   UserReward[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Run {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  date            DateTime
  time            String
  pace            String
  distance        Float
  route           String?
  meetupLocation  String?
  qrCode          String          @unique
  instructorRuns  InstructorRun[]
  userRuns        UserRun[]
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model Reward {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  requirement Int
  userRewards UserReward[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model UserRun {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  run       Run      @relation(fields: [runId], references: [id])
  runId     String   @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId, runId])
}

model InstructorRun {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  instructor  User     @relation(fields: [instructorId], references: [id])
  instructorId String  @db.ObjectId
  run         Run      @relation(fields: [runId], references: [id])
  runId       String   @db.ObjectId
  createdAt   DateTime @default(now())

  @@unique([instructorId, runId])
}

model UserReward {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  reward    Reward   @relation(fields: [rewardId], references: [id])
  rewardId  String   @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId, rewardId])
}

enum Role {
  INSTRUCTOR
  USER
}
